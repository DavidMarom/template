{"version":3,"sources":["services/httpService.js","store/actions/userActions.js","services/bookService.js","store/actions/bookActions.js","store/actions/systemActions.js","services/authorService.js","store/actions/authorActions.js","cmps/BookStrip.jsx","pages/Books.jsx","cmps/AuthorStrip.jsx","pages/Authors.jsx","services/taskService.js","store/actions/taskActions.js","cmps/TaskStrip.jsx","pages/Tasks.jsx","cmps/SideBar.jsx","App.js","reportWebVitals.js","history.js","store/reducers/userReducer.js","store/reducers/bookReducer.js","store/reducers/authorReducer.js","store/reducers/taskReducer.js","store/reducers/systemReducer.js","store/store.jsx","index.js"],"names":["BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","ajax","a","method","url","res","console","log","dir","response","status","window","location","assign","setPageName","name","dispatch","type","bookService","getBooks","filter","currPage","getById","userId","remove","update","book","findIdxToMark","suggestions","object","findIndex","suggest","count","updateBook","_book","loadBooks","books","authorService","getAuthors","author","updateAuthor","_author","loadAuthors","authors","BookStrip","doRefresh","useDispatch","useSelector","state","useState","formName","setFormName","formAuthor","setFormAuthor","editMode","setEditMode","toggleEdit","doUpdate","ev","preventDefault","newBook","_id","form","onSubmit","onChange","event","target","value","placeholder","htmlFor","id","map","last_name","className","onClick","Books","refresh","setRefresh","bookCount","setCurrPage","totalPages","Math","ceil","useEffect","number","AuthorStrip","first_name","formLastName","setFormLastName","newAuthor","Authors","authorCount","taskService","getTasks","loadTasks","tasks","TaskStrip","task","title","Tasks","SideBar","pageName","user","to","App","connect","withRouter","exact","component","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","localLoggedinUser","sessionStorage","JSON","parse","initialState","users","loggedInUser","userCount","popup","activeBook","activeAuthor","isLoading","rootReducer","combineReducers","action","show","singleUser","_user","bookId","system","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","history","document","getElementById"],"mappings":"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","file":"static/js/main.0ab90630.chunk.js","sourcesContent":["import Axios from 'axios';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        if (endpoint === 'undefined') { endpoint = '' }\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`);\r\n        console.dir(err);\r\n        if (err.response && err.response.status === 401) {\r\n            window.location.assign('/#/login');\r\n        }\r\n        throw err;\r\n    }\r\n}","import { userService } from '../../services/userService';\r\nimport { loading, doneLoading } from './systemActions';\r\n\r\nexport function countUsers() {\r\n  return async dispatch => {\r\n    const number = await userService.count();\r\n    dispatch({ type: 'COUNT_USERS', number })\r\n  };\r\n}\r\n\r\nexport function updateUser(user) {\r\n  return async dispatch => {\r\n    const _user = await userService.update(user);\r\n    dispatch({ type: 'UPDATE_USER', _user })\r\n  };\r\n}\r\n\r\nexport function showPopup(show) {\r\n  return async dispatch => {\r\n    console.log('in actions', show);\r\n    dispatch({ type: 'SHOW_POPUP', show: show })\r\n  };\r\n}\r\n\r\nexport function loadUsers(filter, currPage) {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(loading());\r\n      const users = await userService.getUsers(filter, currPage);\r\n      dispatch({ type: 'SET_USERS', users });\r\n    } catch (err) {\r\n      console.log('UserActions: err in loadUsers', err);\r\n\r\n    } finally {\r\n      dispatch(doneLoading());\r\n    }\r\n  };\r\n}\r\n\r\nexport function removeUser(userId) {\r\n  return async dispatch => {\r\n    try {\r\n      await userService.remove(userId);\r\n      dispatch({ type: 'REMOVE_USER', userId });\r\n    } catch (err) {\r\n      console.log('UserActions: err in removeUser', err);\r\n    }\r\n  };\r\n}\r\n\r\nexport function signup(userCreds) {\r\n  return async dispatch => {\r\n    const user = await userService.signup(userCreds);\r\n    dispatch({ type: 'SET_USER', user });\r\n  };\r\n}\r\n\r\nexport function logout() {\r\n  return async dispatch => {\r\n    try {\r\n      await userService.logout();\r\n      dispatch({ type: 'SET_USER', user: null });\r\n    } catch (err) {\r\n      console.log('Log out problem: ', err)\r\n    }\r\n  };\r\n}\r\n\r\nexport function login(userCreds) {\r\n  return async dispatch => {\r\n    const user = await userService.login(userCreds);\r\n    dispatch({ type: 'SET_USER', user });\r\n  };\r\n}\r\n\r\nexport function setPageName(name) {\r\n  return dispatch => {\r\n    dispatch({ type: 'PAGE_NAME', name });\r\n  };\r\n}\r\n\r\nexport function getUserById(userId) {\r\n  return async dispatch => {\r\n    try {\r\n      await userService.getById(userId);\r\n      dispatch({ type: 'GET_USER', userId });\r\n    } catch (err) {\r\n      console.log('UserActions: err in getUser', err);\r\n    }\r\n  };\r\n}","import { httpService } from './httpService'\r\n\r\nfunction count() {\r\n    return httpService.get(`book/count`);\r\n}\r\n\r\nfunction getBooks(filter, currPage) {\r\n    return httpService.get(`book/${filter}?page=${currPage}`);\r\n}\r\n\r\nfunction getById(userId) {\r\n    return httpService.get(`book/${userId}`)\r\n}\r\n\r\nfunction remove(userId) {\r\n    return httpService.delete(`book/${userId}`)\r\n}\r\n\r\nfunction update(book) {\r\n    return httpService.put(`book/update`, book)\r\n}\r\n\r\nfunction findIdxToMark(suggestions, object) {\r\n    return suggestions.findIndex(suggest => suggest.name === object.name);\r\n}\r\n\r\nexport const bookService = {\r\n    getBooks,\r\n    getById,\r\n    remove,\r\n    update,\r\n    findIdxToMark,\r\n    count\r\n};","import { bookService } from '../../services/bookService';\r\nimport { loading, doneLoading } from './systemActions';\r\n\r\nexport function countBooks() {\r\n  return async dispatch => {\r\n    const number = await bookService.count();\r\n    dispatch({ type: 'COUNT_BOOKS', number })\r\n  };\r\n}\r\n\r\nexport function updateBook(book) {\r\n  return async dispatch => {\r\n    const _book = await bookService.update(book);\r\n    dispatch({ type: 'UPDATE_BOOK', _book })\r\n  };\r\n}\r\n\r\nexport function loadBooks(filter, currPage) {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(loading());\r\n      const books = await bookService.getBooks(filter, currPage);\r\n      dispatch({ type: 'SET_BOOKS', books });\r\n    } catch (err) {\r\n      console.log('BookActions: err in loadBook', err);\r\n\r\n    } finally {\r\n      dispatch(doneLoading());\r\n    }\r\n  };\r\n}\r\n\r\nexport function removeBook(bookId) {\r\n  return async dispatch => {\r\n    try {\r\n      await bookService.remove(bookId);\r\n      dispatch({ type: 'REMOVE_BOOK', bookId });\r\n    } catch (err) {\r\n      console.log('BookActions: err in removeUser', err);\r\n    }\r\n  };\r\n}\r\n\r\nexport function getBookById(userId) {\r\n  return async dispatch => {\r\n    try {\r\n      await bookService.getById(userId);\r\n      dispatch({ type: 'GET_USER', userId });\r\n    } catch (err) {\r\n      console.log('UserActions: err in getUser', err);\r\n    }\r\n  };\r\n}","export function loading() {\r\n  return { type: 'LOADING_START' }\r\n}\r\nexport function doneLoading() {\r\n  return { type: 'LOADING_DONE' }\r\n}","import { httpService } from './httpService'\r\n\r\nfunction count() {\r\n\treturn httpService.get(`author/count`);\r\n}\r\n\r\nfunction getAuthors() {\r\n\treturn httpService.get(`author/`);\r\n}\r\n\r\n// function getById(userId) {\r\n//     return httpService.get(`author/${userId}`)\r\n// }\r\n\r\n// function remove(userId) {\r\n//     return httpService.delete(`author/${userId}`)\r\n// }\r\n\r\nfunction update(author) {\r\n\treturn httpService.put(`author/update`, author)\r\n}\r\n\r\n\r\nexport const authorService = {\r\n\tgetAuthors,\r\n\t// getById,\r\n\t// remove,\r\n\tupdate,\r\n\tcount\r\n};","import { authorService } from '../../services/authorService';\r\n\r\nexport function countAuthors() {\r\n  return async dispatch => {\r\n    const number = await authorService.count();\r\n    dispatch({ type: 'COUNT_AUTHORS', number })\r\n  };\r\n}\r\n\r\nexport function updateAuthor(author) {\r\n  return async dispatch => {\r\n    const _author = await authorService.update(author);\r\n    dispatch({ type: 'UPDATE_AUTHOR', _author })\r\n  };\r\n}\r\n\r\nexport function loadAuthors() {\r\n  return async dispatch => {\r\n    try {\r\n      const authors = await authorService.getAuthors();\r\n      dispatch({ type: 'SET_AUTHORS', authors });\r\n    } catch (err) {\r\n      console.log('AuthorsActions: err in loadAuthors', err);\r\n\r\n    } \r\n  };\r\n}\r\n","import React, { useState } from 'react'\r\nimport { updateBook } from \"../store/actions/bookActions\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\n\r\nexport function BookStrip({ book, doRefresh }) {\r\n\tconst dispatch = useDispatch()\r\n\tconst authors = useSelector((state) => state.author.authors);\r\n\r\n\tconst [formName, setFormName] = useState(book.name);\r\n\tconst [formAuthor, setFormAuthor] = useState(book.author);\r\n\tconst [editMode, setEditMode] = useState(false);\r\n\r\n\tif (!book) { return <h1>loading</h1> }\r\n\r\n\tconst toggleEdit = () => {\r\n\t\tsetEditMode(!editMode);\r\n\t}\r\n\r\n\tconst doUpdate = async ev => {\r\n\t\tev.preventDefault();\r\n\t\tconst newBook = {\r\n\t\t\tname: formName,\r\n\t\t\tauthor: formAuthor,\r\n\t\t\t_id: book._id\r\n\t\t};\r\n\t\tdispatch(updateBook(newBook));\r\n\t\ttoggleEdit();\r\n\t\tdoRefresh();\r\n\t};\r\n\r\n\tlet form = (\r\n\t\t<form onSubmit={doUpdate}>\r\n\t\t\t<input name=\"name\" type=\"text\" onChange={event => { setFormName(event.target.value) }} placeholder={book.name} /><br />\r\n\r\n\t\t\t<label htmlFor=\"authors\">Choose author:</label>\r\n\t\t\t<select name=\"author\" id=\"authors\" onChange={event => { setFormAuthor(event.target.value) }}>\r\n\t\t\t\t{authors.map(author =>\r\n\t\t\t\t\t<option\r\n\t\t\t\t\tkey={author._id}\r\n\t\t\t\t\tvalue={author.last_name}\r\n\t\t\t\t\t>{author.last_name}</option>)\r\n\t\t\t\t}\r\n\t\t\t</select>\r\n\r\n\t\t\t<button>Save</button>\r\n\t\t</form>\r\n\t)\r\n\r\n\treturn (\r\n\t\t(editMode ?\r\n\t\t\t<div className=\"table\">\r\n\t\t\t\t{form}\r\n\t\t\t\t<button onClick={toggleEdit}>Cancel</button>\r\n\t\t\t</div>\r\n\t\t\t:\r\n\t\t\t<div className=\"table\">\r\n\t\t\t\t<p className=\"tc\">{book.name}</p>\r\n\t\t\t\t<p className=\"tc\">{book.author}</p>\r\n\t\t\t\t<button onClick={toggleEdit}>Edit</button>\r\n\t\t\t</div>\r\n\t\t)\r\n\t)\r\n}\r\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setPageName } from '../store/actions/userActions'\nimport { loadBooks, countBooks } from \"../store/actions/bookActions\";\nimport { loadAuthors } from \"../store/actions/authorActions\";\nimport { BookStrip } from '../cmps/BookStrip';\n\nconst _Books = () => {\n\tconst dispatch = useDispatch()\n\tconst [refresh, setRefresh] = useState(0)\n\n\tconst bookCount = useSelector((state) => state.book.bookCount);\n\tconst books = useSelector((state) => state.book.books);\n\n\tconst [currPage, setCurrPage] = useState(1);\n\tconst [search, setSearch] = useState('');\n\n\tlet totalPages = Math.ceil(bookCount / 4)\n\n\t// const searchChange = ev => {\n\t// \tsetSearch(ev.target.value);\n\t// }\n\n\t// const doSearch = (ev) => {\n\t// \tev.preventDefault();\n\t// \tdispatch(loadBooks(search));\n\t// }\n\n\tconst doRefresh = () => {\n\t\tsetRefresh(refresh+1)\n\t\tdispatch(loadBooks('', currPage));\n\t}\n\n\n\tuseEffect(() => {\n\t\tdispatch(loadBooks('', currPage));\n\t\tdispatch(loadAuthors());\n\n\t}, [currPage, refresh]);\n\n\n\t// On mount\n\tuseEffect(() => {\n\t\tdispatch(setPageName('books'));\n\t\tdispatch(countBooks());\n\t}, []);\n\n\t\n\n\treturn (\n\n\t\t(books ?\n\t\t\t<div>\n\t\t\t\t<h1>Books</h1>\n\t\t\t\t<div className=\"page-details\">\n\t\t\t\t\t<p>Total books on DB: {bookCount}</p>\n\t\t\t\t\t<p>Total pages : {totalPages}</p>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"table-head\">\n\t\t\t\t\t<p className=\"tc\">Book Name</p>\n\t\t\t\t\t<p className=\"tc\">Author</p>\n\t\t\t\t\t<p className=\"tc\"></p>\n\t\t\t\t</div>\n\n\t\t\t\t{books.map(book => <BookStrip key={book._id} book={book} doRefresh={doRefresh} />)}\n\n\t\t\t\t<button onClick={() => { ((currPage > 1) && setCurrPage(currPage - 1)) }}>Prev</button>\n\t\t\t\t<button onClick={() => { ((currPage <= totalPages - 1) && setCurrPage(currPage + 1)) }}>Next</button>\n\t\t\t</div>\n\t\t\t:\n\t\t\t<h1>Loading</h1>\n\t\t)\n\t)\n}\nexport const Books = _Books\n","import React, { useState } from 'react'\r\nimport { updateAuthor } from \"../store/actions/authorActions\";\r\nimport { useDispatch } from 'react-redux'\r\n\r\n\r\nexport function AuthorStrip({ author, doRefresh }) {\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst [formName, setFormName] = useState(author.first_name);\r\n\tconst [formLastName, setFormLastName] = useState(author.last_name);\r\n\tconst [editMode, setEditMode] = useState(false);\r\n\r\n\tif (!author) { return <h1>loading</h1> }\r\n\r\n\tconst toggleEdit = () => {\r\n\t\tsetEditMode(!editMode);\r\n\t}\r\n\r\n\tconst doUpdate = async ev => {\r\n\t\tev.preventDefault();\r\n\t\tconst newAuthor = {\r\n\t\t\tfirst_name: formName,\r\n\t\t\tlast_name: formLastName,\r\n\t\t\t_id: author._id\r\n\t\t};\r\n\t\tdispatch(updateAuthor(newAuthor));\r\n\t\ttoggleEdit();\r\n\t\tdoRefresh();\r\n\t};\r\n\r\n\tlet form = (\r\n\t\t<form onSubmit={doUpdate}>\r\n\t\t\t<input name=\"name\" type=\"text\" onChange={event => { setFormName(event.target.value) }} placeholder={author.first_name} /><br />\r\n\t\t\t<input name=\"name\" type=\"text\" onChange={event => { setFormLastName(event.target.value) }} placeholder={author.last_name} /><br />\r\n\r\n\t\t\t<button>Save</button>\r\n\t\t</form>\r\n\t)\r\n\r\n\treturn (\r\n\t\t(editMode ?\r\n\t\t\t<div className=\"table\">\r\n\t\t\t\t{form}\r\n\t\t\t\t<button onClick={toggleEdit}>Cancel</button>\r\n\t\t\t</div>\r\n\t\t\t:\r\n\t\t\t<div className=\"table\">\r\n\t\t\t\t<p className=\"tc\">{author.first_name}</p>\r\n\t\t\t\t<p className=\"tc\">{author.last_name}</p>\r\n\t\t\t\t<button onClick={toggleEdit}>Edit</button>\r\n\t\t\t</div>\r\n\t\t)\r\n\t)\r\n}\r\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setPageName } from '../store/actions/userActions'\nimport { loadAuthors, countAuthors } from \"../store/actions/authorActions\";\nimport { AuthorStrip } from '../cmps/AuthorStrip';\n\nconst _Authors = () => {\n\tconst dispatch = useDispatch()\n\tconst [refresh, setRefresh] = useState(0)\n\n\tconst authorCount = useSelector((state) => state.author.authorCount);\n\tconst authors = useSelector((state) => state.author.authors);\n\n\tconst [currPage, setCurrPage] = useState(1);\n\t// const [search, setSearch] = useState('');\n\n\tlet totalPages = Math.ceil(authorCount / 4)\n\n\n\tconst doRefresh = () => {\n\t\tsetRefresh(refresh+1)\n\t\tdispatch(loadAuthors());\n\t}\n\n\n\tuseEffect(() => {\n\t\tdispatch(loadAuthors());\n\t}, [currPage, refresh]);\n\n\n\t// On mount\n\tuseEffect(() => {\n\t\tdispatch(setPageName('authors'));\n\t\tdispatch(countAuthors());\n\t}, []);\n\n\t\n\treturn (\n\n\t\t(authors ?\n\t\t\t<div>\n\t\t\t\t<h1>Authors</h1>\n\t\t\t\t<div className=\"page-details\">\n\t\t\t\t\t<p>Total authors on DB: {authorCount}</p>\n\t\t\t\t\t<p>Total pages : {totalPages}</p>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"table-head\">\n\t\t\t\t\t<p className=\"tc\">First Name</p>\n\t\t\t\t\t<p className=\"tc\">Last Name</p>\n\t\t\t\t\t<p className=\"tc\"></p>\n\t\t\t\t</div>\n\n\t\t\t\t{authors.map(author => <AuthorStrip key={author._id} author={author} doRefresh={doRefresh} />)}\n\n\t\t\t\t<button onClick={() => { ((currPage > 1) && setCurrPage(currPage - 1)) }}>Prev</button>\n\t\t\t\t<button onClick={() => { ((currPage <= totalPages - 1) && setCurrPage(currPage + 1)) }}>Next</button>\n\t\t\t</div>\n\t\t\t:\n\t\t\t<h1>Loading</h1>\n\t\t)\n\t)\n}\nexport const Authors = _Authors\n","import { httpService } from './httpService'\r\n\r\n\r\n\r\nfunction getTasks() {\r\n    return httpService.get(`task/`);\r\n}\r\n\r\nexport const taskService = {\r\n    getTasks\r\n};","import { taskService } from '../../services/taskService';\r\n\r\nexport function loadTasks() {\r\n  return async dispatch => {\r\n    try {\r\n      const tasks = await taskService.getTasks();\r\n      dispatch({ type: 'GET_TASKS', tasks });\r\n    } catch (err) {\r\n      console.log('err in loadTask', err);\r\n\r\n    } \r\n  };\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nexport function TaskStrip({ task }) {\r\n\tconst dispatch = useDispatch()\r\n\tconst authors = useSelector((state) => state.author.authors);\r\n\r\n\t// const [formName, setFormName] = useState(book.title);\r\n\t// const [formAuthor, setFormAuthor] = useState(book.author);\r\n\tconst [editMode, setEditMode] = useState(false);\r\n\r\n\tif (!task) { return <h1>loading</h1> }\r\n\r\n\tconst toggleEdit = () => {\r\n\t\tsetEditMode(!editMode);\r\n\t}\r\n\r\n\t// let form = (\r\n\t// \t<form onSubmit={doUpdate}>\r\n\t// \t\t<input name=\"name\" type=\"text\" onChange={event => { setFormName(event.target.value) }} placeholder={book.name} /><br />\r\n\r\n\t// \t\t<label htmlFor=\"authors\">Choose author:</label>\r\n\t// \t\t<select name=\"author\" id=\"authors\" onChange={event => { setFormAuthor(event.target.value) }}>\r\n\t// \t\t\t{authors.map(author =>\r\n\t// \t\t\t\t<option\r\n\t// \t\t\t\tkey={author._id}\r\n\t// \t\t\t\tvalue={author.last_name}\r\n\t// \t\t\t\t>{author.last_name}</option>)\r\n\t// \t\t\t}\r\n\t// \t\t</select>\r\n\r\n\t// \t\t<button>Save</button>\r\n\t// \t</form>\r\n\t// )\r\n\r\n\treturn (\r\n\t\t(editMode ?\r\n\t\t\t<div className=\"table\">\r\n\t\t\t\t<p>edit</p>\r\n\t\t\t\t<button onClick={toggleEdit}>Cancel</button>\r\n\t\t\t</div>\r\n\t\t\t:\r\n\t\t\t<div className=\"table\">\r\n\t\t\t\t<p className=\"tc\">{task.title}</p>\r\n\t\t\t\t<p className=\"tc\">{task.status}</p>\r\n\t\t\t\t{/* <button onClick={toggleEdit}>Edit</button> */}\r\n\t\t\t</div>\r\n\t\t)\r\n\t)\r\n}\r\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setPageName } from '../store/actions/userActions'\nimport { loadTasks } from \"../store/actions/taskActions\";\nimport { TaskStrip } from '../cmps/TaskStrip';\n\nconst _Tasks = () => {\n\tconst dispatch = useDispatch()\n\tconst [refresh, setRefresh] = useState(0)\n\n\tconst tasks = useSelector((state) => state.task.tasks);\n\n\t// const [currPage, setCurrPage] = useState(1);\n\t// const [search, setSearch] = useState('');\n\n\t// let totalPages = Math.ceil(bookCount / 4)\n\n\tconst doRefresh = () => {\n\t\tsetRefresh(refresh+1)\n\t\tdispatch(loadTasks());\n\t}\n\n\tuseEffect(() => {\n\t\tdispatch(loadTasks());\n\t}, [refresh]);\n\t\n\t// On mount\n\tuseEffect(() => {\n\t\tdispatch(loadTasks());\n\t\tdispatch(setPageName('tasks'));\n\t\tconsole.log(tasks);\n\t}, []);\n\n\treturn (\n\t\t(tasks ?\n\t\t\t<div>\n\t\t\t\t<h1>Tasks</h1>\n\t\t\t\t<div className=\"page-details\">\n\t\t\t\t\t\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"table-head\">\n\t\t\t\t\t<p className=\"tc\">Task</p>\n\t\t\t\t\t<p className=\"tc\">Status</p>\n\t\t\t\t\t<p className=\"tc\"></p>\n\t\t\t\t</div>\n\n\t\t\t\t{tasks.map(task => <TaskStrip key={task._id} task={task} doRefresh={doRefresh} />)}\n\t\t\t</div>\n\t\t\t:\n\t\t\t<h1>Loading</h1>\n\t\t)\n\t)\n}\nexport const Tasks = _Tasks\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nexport const SideBar = () => {\r\n  const pageName = useSelector((state) => state.user.pageName);\r\n\r\n\r\n  return (\r\n    <div className=\"cbl2 inner-side-bar\">\r\n      <p className=\"title\">Side Bar</p>\r\n\r\n      <div className={(pageName === 'books' ? \"active-cell\" : \"inactive-cell\")}>\r\n        <NavLink to=\"/\"> Books</NavLink>\r\n      </div>\r\n\r\n      <div className={(pageName === 'authors' ? \"active-cell\" : \"inactive-cell\")}>\r\n        <NavLink to=\"/authors\"> Authors</NavLink>\r\n      </div>\r\n\r\n      <div className={(pageName === 'tasks' ? \"active-cell\" : \"inactive-cell\")}>\r\n        <NavLink to=\"/tasks\"> Tasks</NavLink>\r\n      </div>\r\n\r\n      \r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\n\n// PAGES\nimport { Books } from \"./pages/Books\";\nimport { Authors } from \"./pages/Authors\";\nimport { Tasks } from \"./pages/Tasks\";\n\n// COMPS\nimport { SideBar } from \"./cmps/SideBar\";\n\nfunction _App() {\n\treturn (\n\t\t<div className=\"outter-container\">\n\t\t\t<div className=\"inner-container\">\n\t\t\t\t<div className=\"ra\">\n\t\t\t\t\t<div className=\"side-bar\"><SideBar /></div>\n\t\t\t\t\t<div className=\"content-container\">\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route exact component={Books} path={\"/\"} />\n\t\t\t\t\t\t\t<Route exact component={Authors} path={\"/authors\"} />\n\t\t\t\t\t\t\t<Route exact component={Tasks} path={\"/tasks\"} />\n\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport const App = connect(null, null)(withRouter(_App));","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createBrowserHistory} from 'history'\r\n\r\nexport default createBrowserHistory()","let localLoggedinUser = null;\r\nif (sessionStorage.user) localLoggedinUser = JSON.parse(sessionStorage.user);\r\n\r\nconst initialState = {\r\n    users: [],\r\n    loggedInUser: localLoggedinUser,\r\n    userCount: null,\r\n    pageName: null,\r\n    popup: true\r\n}\r\n\r\nexport function user(state = initialState, action = {}) {\r\n    switch (action.type) {\r\n        case 'COUNT_USERS':\r\n            return { ...state, userCount: action.number[0]['total'] };\r\n        case 'SHOW_POPUP':\r\n            return { ...state, popup: action.show };\r\n        case 'SET_USER':\r\n            return { ...state, loggedInUser: action.user, popup: true };\r\n        case 'GET_USER':\r\n            return { ...state, singleUser: action.userId };\r\n        case 'SET_USERS':\r\n            return { ...state, users: action.users };\r\n        case 'REMOVE_USER':\r\n            return { ...state, users: state.users.filter(user => user._id !== action.userId) };\r\n        \r\n\t\tcase 'PAGE_NAME':\r\n            return { ...state, pageName: action.name };\r\n        case 'UPDATE_USER':\r\n            return { ...state, users: state.users.map(user => (action._user._id === user._id) ? action._user : user) }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n    books: [],\r\n    bookCount: null,\r\n\tactiveBook : null\r\n}\r\n\r\nexport function book(state = initialState, action = {}) {\r\n    switch (action.type) {\r\n        case 'COUNT_BOOKS':\r\n            return { ...state, bookCount: action.number[0]['total'] };\r\n        \r\n        case 'SET_BOOK':\r\n            return { ...state, activeBook: action.book };\r\n\r\n        case 'GET_BOOK':\r\n            return { ...state, singleUser: action.bookId };\r\n\r\n        case 'SET_BOOKS':\r\n            return { ...state, books: action.books };\r\n\r\n        case 'REMOVE_BOOK':\r\n            return { ...state, books: state.books.filter(book => book._id !== action.bookId) };\r\n        \r\n        case 'UPDATE_BOOK':\r\n            return { ...state, book: state.books.map(book => (action._book._id === book._id) ? action._book : book) }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n    authors: [],\r\n    authorCount: null,\r\n\tactiveAuthor : null\r\n}\r\n\r\nexport function author(state = initialState, action = {}) {\r\n    switch (action.type) {\r\n        case 'COUNT_AUTHORS':\r\n            return { ...state, authorCount: action.number[0]['total'] };\r\n        \r\n        case 'SET_AUTHOR':\r\n            return { ...state, activeAuthor: action.author };\r\n\r\n        // case 'GET_AUTHOR':\r\n        //     return { ...state, singleAuthor: action.authorId };\r\n\r\n        case 'SET_AUTHORS':\r\n            return { ...state, authors: action.authors };\r\n\r\n        // case 'REMOVE_AUTHOR':\r\n        //     return { ...state, authors: state.authors.filter(author => author._id !== action.authorId) };\r\n        \r\n        case 'UPDATE_AUTHOR':\r\n            return { ...state, author: state.authors.map(author => (action._author._id === author._id) ? action._author : author) }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n    tasks: []   \r\n}\r\n\r\nexport function task(state = initialState, action = {}) {\r\n    switch (action.type) {\r\n       \r\n\r\n        case 'GET_TASKS':\r\n\t\t\treturn { ...state, tasks: action.tasks };\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n  isLoading: false\r\n};\r\n\r\nexport function system(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'LOADING_START':\r\n      return { ...state, isLoading: true };\r\n    case 'LOADING_DONE':\r\n      return { ...state, isLoading: false };\r\n    default: return state;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, compose, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport { user } from '../store/reducers/userReducer';\r\nimport { book } from '../store/reducers/bookReducer';\r\nimport { author } from '../store/reducers/authorReducer';\r\nimport { task } from '../store/reducers/taskReducer';\r\nimport { system } from '../store/reducers/systemReducer';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    user,\r\n    book,\r\n\tauthor,\r\n\ttask,\r\n    system\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\nimport history from './history';\nimport { Router } from 'react-router-dom';\nimport { store } from './store/store';\nimport './assets/styles/global.scss'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Router history={history}>\n\t\t\t<Provider store={store}>\n\t\t\t\t<App />\n\t\t\t</Provider>\n\t\t</Router>\n\t</React.StrictMode >,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}