{"version":3,"sources":["UserContext.js","services/httpService.js","store/actions/userActions.js","services/bookService.js","store/actions/bookActions.js","store/actions/systemActions.js","services/authorService.js","store/actions/authorActions.js","cmps/BookStrip.jsx","pages/Books.jsx","cmps/AuthorStrip.jsx","pages/Authors.jsx","services/taskService.js","store/actions/taskActions.js","cmps/TaskStrip.jsx","pages/Tasks.jsx","services/firebase.js","services/fbService.js","cmps/ItemStrip.jsx","store/actions/fbActions.js","pages/Fbdb.jsx","pages/Login.jsx","pages/Debounce.jsx","pages/Validation.jsx","pages/Lobby.jsx","cmps/SideBar.jsx","App.js","reportWebVitals.js","history.js","store/reducers/userReducer.js","store/reducers/bookReducer.js","store/reducers/authorReducer.js","store/reducers/taskReducer.js","store/reducers/fbReducer.js","store/reducers/systemReducer.js","store/store.jsx","index.js"],"names":["UserContext","createContext","BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","ajax","a","method","url","res","console","log","dir","response","status","window","location","assign","setPageName","name","dispatch","type","bookService","getBooks","filter","currPage","getById","userId","remove","update","book","findIdxToMark","suggestions","object","findIndex","suggest","count","updateBook","_book","loadBooks","books","authorService","getAuthors","author","updateAuthor","_author","loadAuthors","authors","BookStrip","doRefresh","useDispatch","useSelector","state","useState","formName","setFormName","formAuthor","setFormAuthor","editMode","setEditMode","toggleEdit","doUpdate","ev","preventDefault","newBook","_id","form","onSubmit","className","onChange","event","target","value","placeholder","id","map","last_name","onClick","Books","refresh","setRefresh","bookCount","setCurrPage","totalPages","Math","ceil","useEffect","number","AuthorStrip","first_name","formLastName","setFormLastName","newAuthor","Authors","authorCount","taskService","getTasks","loadTasks","tasks","TaskStrip","task","title","Tasks","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","coll","addDoc","collection","fbdb","addToDB","getAllDocs","Promise","resolve","allDocs","getDocs","then","forEach","doc","prepare","resData","push","RemoveDoc","deleteDoc","UpdateDB","updateDoc","provider","GoogleAuthProvider","fbService","getItems","delItem","addItem","ItemStrip","item","err","Fbdb","items","fb","itemInput","setItemInput","inData","newId","Login","useContext","user","setLoggedUser","auth","getAuth","signInWithPopup","result","token","credentialFromResult","accessToken","tmp","displayName","mail","email","photoURL","uid","catch","error","signOut","src","Debounce","setState","minLength","debounceTimeout","Validation","name_err","setName_err","company_err","setComp_err","phone_err","setPhone_err","email_err","setEmail_err","check_err","setCheck_err","check_stts","setCheck_stts","doSend","test","company","phone","Lobby","SideBar","pageName","to","App","withRouter","Provider","exact","component","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","localLoggedinUser","sessionStorage","JSON","parse","initialState","users","loggedInUser","userCount","popup","activeBook","activeAuthor","isLoading","rootReducer","combineReducers","action","show","singleUser","_user","bookId","system","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","history","document","getElementById"],"mappings":"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","file":"static/js/main.f2233d5a.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const UserContext = createContext(null);","import Axios from 'axios';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        if (endpoint === 'undefined') { endpoint = '' }\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`);\r\n        console.dir(err);\r\n        if (err.response && err.response.status === 401) {\r\n            window.location.assign('/#/login');\r\n        }\r\n        throw err;\r\n    }\r\n}","import { userService } from '../../services/userService';\r\nimport { loading, doneLoading } from './systemActions';\r\n\r\nexport function countUsers() {\r\n\treturn async dispatch => {\r\n\t\tconst number = await userService.count();\r\n\t\tdispatch({ type: 'COUNT_USERS', number })\r\n\t};\r\n}\r\n\r\nexport function updateUser(user) {\r\n\treturn async dispatch => {\r\n\t\tconst _user = await userService.update(user);\r\n\t\tdispatch({ type: 'UPDATE_USER', _user })\r\n\t};\r\n}\r\n\r\nexport function showPopup(show) {\r\n\treturn async dispatch => {\r\n\t\tconsole.log('in actions', show);\r\n\t\tdispatch({ type: 'SHOW_POPUP', show: show })\r\n\t};\r\n}\r\n\r\nexport function loadUsers(filter, currPage) {\r\n\treturn async dispatch => {\r\n\t\ttry {\r\n\t\t\tdispatch(loading());\r\n\t\t\tconst users = await userService.getUsers(filter, currPage);\r\n\t\t\tdispatch({ type: 'SET_USERS', users });\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log('UserActions: err in loadUsers', err);\r\n\r\n\t\t} finally {\r\n\t\t\tdispatch(doneLoading());\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport function removeUser(userId) {\r\n\treturn async dispatch => {\r\n\t\ttry {\r\n\t\t\tawait userService.remove(userId);\r\n\t\t\tdispatch({ type: 'REMOVE_USER', userId });\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log('UserActions: err in removeUser', err);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport function signup(userCreds) {\r\n\treturn async dispatch => {\r\n\t\tconst user = await userService.signup(userCreds);\r\n\t\tdispatch({ type: 'SET_USER', user });\r\n\t};\r\n}\r\n\r\nexport function logout() {\r\n\treturn async dispatch => {\r\n\t\ttry {\r\n\t\t\tawait userService.logout();\r\n\t\t\tdispatch({ type: 'SET_USER', user: null });\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log('Log out problem: ', err)\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport function login(userCreds) {\r\n\treturn async dispatch => {\r\n\t\tconst user = await userService.login(userCreds);\r\n\t\tdispatch({ type: 'SET_USER', user });\r\n\t};\r\n}\r\n\r\nexport function setPageName(name) {\r\n\treturn dispatch => {\r\n\t\tdispatch({ type: 'PAGE_NAME', name });\r\n\t};\r\n}\r\n\r\nexport function getUserById(userId) {\r\n\treturn async dispatch => {\r\n\t\ttry {\r\n\t\t\tawait userService.getById(userId);\r\n\t\t\tdispatch({ type: 'GET_USER', userId });\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log('UserActions: err in getUser', err);\r\n\t\t}\r\n\t};\r\n}","import { httpService } from './httpService'\r\n\r\nfunction count() {\r\n    return httpService.get(`book/count`);\r\n}\r\n\r\nfunction getBooks(filter, currPage) {\r\n    return httpService.get(`book/${filter}?page=${currPage}`);\r\n}\r\n\r\nfunction getById(userId) {\r\n    return httpService.get(`book/${userId}`)\r\n}\r\n\r\nfunction remove(userId) {\r\n    return httpService.delete(`book/${userId}`)\r\n}\r\n\r\nfunction update(book) {\r\n    return httpService.put(`book/update`, book)\r\n}\r\n\r\nfunction findIdxToMark(suggestions, object) {\r\n    return suggestions.findIndex(suggest => suggest.name === object.name);\r\n}\r\n\r\nexport const bookService = {\r\n    getBooks,\r\n    getById,\r\n    remove,\r\n    update,\r\n    findIdxToMark,\r\n    count\r\n};","import { bookService } from '../../services/bookService';\r\nimport { loading, doneLoading } from './systemActions';\r\n\r\nexport function countBooks() {\r\n\treturn async dispatch => {\r\n\t\tconst number = await bookService.count();\r\n\t\tdispatch({ type: 'COUNT_BOOKS', number })\r\n\t};\r\n}\r\n\r\nexport function updateBook(book) {\r\n\treturn async dispatch => {\r\n\t\tconst _book = await bookService.update(book);\r\n\t\tdispatch({ type: 'UPDATE_BOOK', _book })\r\n\t};\r\n}\r\n\r\nexport function loadBooks(filter, currPage) {\r\n\treturn async dispatch => {\r\n\t\ttry {\r\n\t\t\tdispatch(loading());\r\n\t\t\tconst books = await bookService.getBooks(filter, currPage);\r\n\t\t\tdispatch({ type: 'SET_BOOKS', books });\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log('BookActions: err in loadBook', err);\r\n\r\n\t\t} finally {\r\n\t\t\tdispatch(doneLoading());\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport function removeBook(bookId) {\r\n\treturn async dispatch => {\r\n\t\ttry {\r\n\t\t\tawait bookService.remove(bookId);\r\n\t\t\tdispatch({ type: 'REMOVE_BOOK', bookId });\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log('BookActions: err in removeUser', err);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport function getBookById(userId) {\r\n\treturn async dispatch => {\r\n\t\ttry {\r\n\t\t\tawait bookService.getById(userId);\r\n\t\t\tdispatch({ type: 'GET_USER', userId });\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log('UserActions: err in getUser', err);\r\n\t\t}\r\n\t};\r\n}","export function loading() {\r\n  return { type: 'LOADING_START' }\r\n}\r\nexport function doneLoading() {\r\n  return { type: 'LOADING_DONE' }\r\n}","import { httpService } from './httpService'\r\n\r\nfunction count() {\r\n\treturn httpService.get(`author/count`);\r\n}\r\n\r\nfunction getAuthors() {\r\n\treturn httpService.get(`author/`);\r\n}\r\n\r\n// function getById(userId) {\r\n//     return httpService.get(`author/${userId}`)\r\n// }\r\n\r\n// function remove(userId) {\r\n//     return httpService.delete(`author/${userId}`)\r\n// }\r\n\r\nfunction update(author) {\r\n\treturn httpService.put(`author/update`, author)\r\n}\r\n\r\n\r\nexport const authorService = {\r\n\tgetAuthors,\r\n\t// getById,\r\n\t// remove,\r\n\tupdate,\r\n\tcount\r\n};","import { authorService } from '../../services/authorService';\r\n\r\nexport function countAuthors() {\r\n  return async dispatch => {\r\n    const number = await authorService.count();\r\n    dispatch({ type: 'COUNT_AUTHORS', number })\r\n  };\r\n}\r\n\r\nexport function updateAuthor(author) {\r\n  return async dispatch => {\r\n    const _author = await authorService.update(author);\r\n    dispatch({ type: 'UPDATE_AUTHOR', _author })\r\n  };\r\n}\r\n\r\nexport function loadAuthors() {\r\n  return async dispatch => {\r\n    try {\r\n      const authors = await authorService.getAuthors();\r\n      dispatch({ type: 'SET_AUTHORS', authors });\r\n    } catch (err) {\r\n      console.log('AuthorsActions: err in loadAuthors', err);\r\n\r\n    } \r\n  };\r\n}\r\n","import React, { useState } from 'react'\r\nimport { updateBook } from \"../store/actions/bookActions\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\n\r\nexport function BookStrip({ book, doRefresh }) {\r\n\tconst dispatch = useDispatch()\r\n\tconst authors = useSelector((state) => state.author.authors);\r\n\r\n\tconst [formName, setFormName] = useState(book.name);\r\n\tconst [formAuthor, setFormAuthor] = useState(book.author);\r\n\tconst [editMode, setEditMode] = useState(false);\r\n\r\n\tif (!book) { return <h1>loading</h1> }\r\n\r\n\tconst toggleEdit = () => {\r\n\t\tsetEditMode(!editMode);\r\n\t}\r\n\r\n\tconst doUpdate = async ev => {\r\n\t\tev.preventDefault();\r\n\t\tconst newBook = {\r\n\t\t\tname: formName,\r\n\t\t\tauthor: formAuthor,\r\n\t\t\t_id: book._id\r\n\t\t};\r\n\t\tdispatch(updateBook(newBook));\r\n\t\ttoggleEdit();\r\n\t\tdoRefresh();\r\n\t};\r\n\r\n\tlet form = (\r\n\t\t<form onSubmit={doUpdate} className=\"table\">\r\n\t\t\t<input className=\"tc\" name=\"name\" type=\"text\" onChange={event => { setFormName(event.target.value) }} placeholder={book.name} />\r\n\r\n\t\t\t{/* <label htmlFor=\"authors\">Choose author:</label> */}\r\n\t\t\t<select className=\"tc\" name=\"author\" id=\"authors\" onChange={event => { setFormAuthor(event.target.value) }}>\r\n\t\t\t\t{authors.map(author =>\r\n\t\t\t\t\t<option\r\n\t\t\t\t\tkey={author._id}\r\n\t\t\t\t\tvalue={author.last_name}\r\n\t\t\t\t\t>{author.last_name}</option>)\r\n\t\t\t\t}\r\n\t\t\t</select>\r\n\r\n\t\t\t<p className=\"tc-small\">{book._id}</p>\r\n\t\t\t<p className=\"tc\"></p>\r\n\t\t\t<p className=\"tc\"></p>\r\n\t\t\t<button className=\"btn\"><i className=\"fas fa-check\"></i></button>\r\n\t\t\t<button className=\"btn\" onClick={toggleEdit}><i className=\"fas fa-times\"></i></button>\r\n\t\t</form>\r\n\t)\r\n\t\r\n\treturn (\r\n\t\t(editMode ?\r\n\t\t\t<div >\r\n\t\t\t\t{form}\r\n\t\t\t</div>\r\n\t\t\t:\r\n\t\t\t<div className=\"table\">\r\n\t\t\t\t<p className=\"tc\">{book.name}</p>\r\n\t\t\t\t<p className=\"tc\">{book.author}</p>\r\n\t\t\t\t<p className=\"tc-small\">{book._id}</p>\r\n\t\t\t\t<p className=\"tc\"></p>\r\n\t\t\t\t<p className=\"tc\"></p>\r\n\t\t\t\t<button className=\"btn\" onClick={toggleEdit}><i className=\"fas fa-pen\"></i></button>\r\n\t\t\t\t<p></p>\r\n\t\t\t</div>\r\n\t\t)\r\n\t)\r\n}\r\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setPageName } from '../store/actions/userActions'\nimport { loadBooks, countBooks } from \"../store/actions/bookActions\";\nimport { loadAuthors } from \"../store/actions/authorActions\";\nimport { BookStrip } from '../cmps/BookStrip';\n\nconst _Books = () => {\n\tconst dispatch = useDispatch()\n\tconst [refresh, setRefresh] = useState(0)\n\n\tconst bookCount = useSelector((state) => state.book.bookCount);\n\tconst books = useSelector((state) => state.book.books);\n\n\tconst [currPage, setCurrPage] = useState(1);\n\t// const [search, setSearch] = useState('');\n\n\n\tlet totalPages = Math.ceil(bookCount / 4)\n\n\t// const searchChange = ev => {\n\t// \tsetSearch(ev.target.value);\n\t// }\n\n\t// const doSearch = (ev) => {\n\t// \tev.preventDefault();\n\t// \tdispatch(loadBooks(search));\n\t// }\n\n\tconst doRefresh = () => {\n\t\tsetRefresh(refresh+1)\n\t\tdispatch(loadBooks('', currPage));\n\t}\n\n\tuseEffect(() => {\n\t\tdispatch(loadBooks('', currPage));\n\t\tdispatch(loadAuthors());\n\t}, [currPage, refresh])// eslint-disable-line react-hooks/exhaustive-deps\n\n\t// On mount\n\tuseEffect(() => {\n\t\tdispatch(setPageName('books'));\n\t\tdispatch(countBooks());\n\t}, [])// eslint-disable-line react-hooks/exhaustive-deps\n\n\treturn (\n\t\t(books ?\n\t\t\t<div>\n\t\t\t\t<h1>Books</h1>\n\t\t\t\t<div className=\"page-details\">\n\t\t\t\t\t<p>Total books on DB: {bookCount}</p>\n\t\t\t\t\t<p>Total pages : {totalPages}</p>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"table-head\">\n\t\t\t\t\t<p className=\"tc\">Book Name</p>\n\t\t\t\t\t<p className=\"tc\">Author</p>\n\t\t\t\t\t<p className=\"tc\">ID</p>\n\t\t\t\t\t<p className=\"tc\"></p>\n\t\t\t\t\t<p className=\"tc\"></p>\n\t\t\t\t\t<p></p>\n\t\t\t\t\t<p></p>\n\t\t\t\t</div>\n\n\t\t\t\t{books.map(book => <BookStrip key={book._id} book={book} doRefresh={doRefresh} />)}\n\n\t\t\t\t<button onClick={() => { ((currPage > 1) && setCurrPage(currPage - 1)) }}>Prev</button>\n\t\t\t\t<button onClick={() => { ((currPage <= totalPages - 1) && setCurrPage(currPage + 1)) }}>Next</button>\n\n\t\t\t</div>\n\t\t\t:\n\t\t\t<h1>Loading</h1>\n\t\t)\n\t)\n}\nexport const Books = _Books\n","import React, { useState } from 'react'\r\nimport { updateAuthor } from \"../store/actions/authorActions\";\r\nimport { useDispatch } from 'react-redux'\r\n\r\n\r\nexport function AuthorStrip({ author, doRefresh }) {\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst [formName, setFormName] = useState(author.first_name);\r\n\tconst [formLastName, setFormLastName] = useState(author.last_name);\r\n\tconst [editMode, setEditMode] = useState(false);\r\n\r\n\tif (!author) { return <h1>loading</h1> }\r\n\r\n\tconst toggleEdit = () => {\r\n\t\tsetEditMode(!editMode);\r\n\t}\r\n\r\n\tconst doUpdate = async ev => {\r\n\t\tev.preventDefault();\r\n\t\tconst newAuthor = {\r\n\t\t\tfirst_name: formName,\r\n\t\t\tlast_name: formLastName,\r\n\t\t\t_id: author._id\r\n\t\t};\r\n\t\tdispatch(updateAuthor(newAuthor));\r\n\t\ttoggleEdit();\r\n\t\tdoRefresh();\r\n\t};\r\n\r\n\tlet form = (\r\n\t\t<form onSubmit={doUpdate}>\r\n\t\t\t<input name=\"name\" type=\"text\" onChange={event => { setFormName(event.target.value) }} placeholder={author.first_name} /><br />\r\n\t\t\t<input name=\"name\" type=\"text\" onChange={event => { setFormLastName(event.target.value) }} placeholder={author.last_name} /><br />\r\n\r\n\t\t\t<button>Save</button>\r\n\t\t</form>\r\n\t)\r\n\r\n\treturn (\r\n\t\t(editMode ?\r\n\t\t\t<div className=\"table\">\r\n\t\t\t\t{form}\r\n\t\t\t\t<button onClick={toggleEdit}>Cancel</button>\r\n\t\t\t</div>\r\n\t\t\t:\r\n\t\t\t<div className=\"table\">\r\n\t\t\t\t<p className=\"tc\">{author.first_name}</p>\r\n\t\t\t\t<p className=\"tc\">{author.last_name}</p>\r\n\t\t\t\t<button onClick={toggleEdit}>Edit</button>\r\n\t\t\t</div>\r\n\t\t)\r\n\t)\r\n}\r\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setPageName } from '../store/actions/userActions'\nimport { loadAuthors, countAuthors } from \"../store/actions/authorActions\";\nimport { AuthorStrip } from '../cmps/AuthorStrip';\n\nconst _Authors = () => {\n\tconst dispatch = useDispatch()\n\tconst [refresh, setRefresh] = useState(0)\n\n\tconst authorCount = useSelector((state) => state.author.authorCount);\n\tconst authors = useSelector((state) => state.author.authors);\n\n\tconst [currPage, setCurrPage] = useState(1);\n\t// const [search, setSearch] = useState('');\n\n\tlet totalPages = Math.ceil(authorCount / 4)\n\n\n\tconst doRefresh = () => {\n\t\tsetRefresh(refresh + 1)\n\t\tdispatch(loadAuthors());\n\t}\n\n\tuseEffect(() => {\n\t\tdispatch(loadAuthors());\n\t}, [currPage, refresh, dispatch]);\n\n\n\t// On mount\n\tuseEffect(() => {\n\t\tdispatch(setPageName('authors')); \n\t\tdispatch(countAuthors()); \n\t}, [])// eslint-disable-line react-hooks/exhaustive-deps\n\n\n\treturn (\n\n\t\t(authors ?\n\t\t\t<div>\n\t\t\t\t<h1>Authors</h1>\n\t\t\t\t<div className=\"page-details\">\n\t\t\t\t\t<p>Total authors on DB: {authorCount}</p>\n\t\t\t\t\t<p>Total pages : {totalPages}</p>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"table-head\">\n\t\t\t\t\t<p className=\"tc\">First Name</p>\n\t\t\t\t\t<p className=\"tc\">Last Name</p>\n\t\t\t\t\t<p className=\"tc\"></p>\n\t\t\t\t</div>\n\n\t\t\t\t{authors.map(author => <AuthorStrip key={author._id} author={author} doRefresh={doRefresh} />)}\n\n\t\t\t\t<button onClick={() => { ((currPage > 1) && setCurrPage(currPage - 1)) }}>Prev</button>\n\t\t\t\t<button onClick={() => { ((currPage <= totalPages - 1) && setCurrPage(currPage + 1)) }}>Next</button>\n\t\t\t</div>\n\t\t\t:\n\t\t\t<h1>Loading</h1>\n\t\t)\n\t)\n}\nexport const Authors = _Authors\n","import { httpService } from './httpService'\r\n\r\n\r\n\r\nfunction getTasks() {\r\n    return httpService.get(`task/`);\r\n}\r\n\r\nexport const taskService = {\r\n    getTasks\r\n};","import { taskService } from '../../services/taskService';\r\n\r\nexport function loadTasks() {\r\n  return async dispatch => {\r\n    try {\r\n      const tasks = await taskService.getTasks();\r\n      dispatch({ type: 'GET_TASKS', tasks });\r\n    } catch (err) {\r\n      console.log('err in loadTask', err);\r\n\r\n    } \r\n  };\r\n}\r\n","import React, { useState } from 'react'\r\n// import { useSelector, useDispatch } from 'react-redux'\r\n\r\nexport function TaskStrip({ task }) {\r\n\t// const dispatch = useDispatch()\r\n\t// const authors = useSelector((state) => state.author.authors);\r\n\r\n\t// const [formName, setFormName] = useState(book.title);\r\n\t// const [formAuthor, setFormAuthor] = useState(book.author);\r\n\tconst [editMode, setEditMode] = useState(false);\r\n\r\n\tif (!task) { return <h1>loading</h1> }\r\n\r\n\tconst toggleEdit = () => {\r\n\t\tsetEditMode(!editMode);\r\n\t}\r\n\r\n\t// let form = (\r\n\t// \t<form onSubmit={doUpdate}>\r\n\t// \t\t<input name=\"name\" type=\"text\" onChange={event => { setFormName(event.target.value) }} placeholder={book.name} /><br />\r\n\r\n\t// \t\t<label htmlFor=\"authors\">Choose author:</label>\r\n\t// \t\t<select name=\"author\" id=\"authors\" onChange={event => { setFormAuthor(event.target.value) }}>\r\n\t// \t\t\t{authors.map(author =>\r\n\t// \t\t\t\t<option\r\n\t// \t\t\t\tkey={author._id}\r\n\t// \t\t\t\tvalue={author.last_name}\r\n\t// \t\t\t\t>{author.last_name}</option>)\r\n\t// \t\t\t}\r\n\t// \t\t</select>\r\n\r\n\t// \t\t<button>Save</button>\r\n\t// \t</form>\r\n\t// )\r\n\r\n\treturn (\r\n\t\t(editMode ?\r\n\t\t\t<div className=\"table\">\r\n\t\t\t\t<p>edit</p>\r\n\t\t\t\t<button onClick={toggleEdit}>Cancel</button>\r\n\t\t\t</div>\r\n\t\t\t:\r\n\t\t\t<div className=\"table\">\r\n\t\t\t\t<p className=\"tc\">{task.title}</p>\r\n\t\t\t\t<p className=\"tc\">{task.status}</p>\r\n\t\t\t\t{/* <button onClick={toggleEdit}>Edit</button> */}\r\n\t\t\t</div>\r\n\t\t)\r\n\t)\r\n}\r\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setPageName } from '../store/actions/userActions'\nimport { loadTasks } from \"../store/actions/taskActions\";\nimport { TaskStrip } from '../cmps/TaskStrip';\n\nconst _Tasks = () => {\n\tconst dispatch = useDispatch()\n\tconst [refresh, setRefresh] = useState(0)\n\n\tconst tasks = useSelector((state) => state.task.tasks);\n\n\t// const [currPage, setCurrPage] = useState(1);\n\t// const [search, setSearch] = useState('');\n\n\t// let totalPages = Math.ceil(bookCount / 4)\n\n\tconst doRefresh = () => {\n\t\tsetRefresh(refresh+1)\n\t\tdispatch(loadTasks());\n\t}\n\n\tuseEffect(() => {\n\t\tdispatch(loadTasks());\n\t}, [refresh])// eslint-disable-line react-hooks/exhaustive-deps\n\t\n\t// On mount\n\tuseEffect(() => {\n\t\tdispatch(loadTasks());\n\t\tdispatch(setPageName('tasks'));\n\t\tconsole.log(tasks);\n\t}, [])// eslint-disable-line react-hooks/exhaustive-deps\n\n\treturn (\n\t\t(tasks ?\n\t\t\t<div>\n\t\t\t\t<h1>Tasks</h1>\n\t\t\t\t<div className=\"page-details\">\n\t\t\t\t\t\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"table-head\">\n\t\t\t\t\t<p className=\"tc\">Task</p>\n\t\t\t\t\t<p className=\"tc\">Status</p>\n\t\t\t\t\t<p className=\"tc\"></p>\n\t\t\t\t</div>\n\n\t\t\t\t{tasks.map(task => <TaskStrip key={task._id} task={task} doRefresh={doRefresh} />)}\n\t\t\t</div>\n\t\t\t:\n\t\t\t<h1>Loading</h1>\n\t\t)\n\t)\n}\nexport const Tasks = _Tasks\n","import { initializeApp } from \"firebase/app\";\nimport { getFirestore, collection, doc, addDoc, getDocs, deleteDoc, updateDoc } from \"firebase/firestore\";\nimport { GoogleAuthProvider } from \"firebase/auth\";\n\n\n\ninitializeApp({\n\tapiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n\tauthDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n\tprojectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n\tstorageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n\tmessagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n\tappId: process.env.REACT_APP_FIREBASE_APP_ID\n});\n\nconst db = getFirestore();\nconst provider = new GoogleAuthProvider();\n\nasync function addToDB(coll, data) {\n\tlet res = await addDoc(collection(db, coll), data);\n\treturn (res.id);\n}\n\nconst getAllDocs = (coll) => {\n\treturn new Promise((resolve) => {\n\t\tlet allDocs = [];\n\t\tgetDocs(collection(db, coll)).then(res => {\n\t\t\tres.forEach((doc) => {\n\t\t\t\tlet prepare = { id: doc.id }\n\t\t\t\tlet resData = doc.data();\n\t\t\t\tprepare = { ...prepare, ...resData }\n\t\t\t\tallDocs.push(prepare);\n\t\t\t});\n\t\t\tresolve(allDocs)\n\t\t}\n\t\t)\n\t});\n}\n\nconst RemoveDoc = (coll, id) => deleteDoc(doc(db, coll, id));\n\nconst UpdateDB = (coll, id, data) => { updateDoc(doc(db, coll, id), data) }\n\nexport const fbdb = {\n\taddToDB,\n\tgetAllDocs,\n\tRemoveDoc,\n\tUpdateDB,\n\tprovider\n\t\n}","import { fbdb } from './firebase'\r\n\r\nasync function getItems() {\r\n\treturn await fbdb.getAllDocs(\"col02\");\r\n}\r\n\r\nasync function delItem(id) {\r\n\tfbdb.RemoveDoc(\"col02\",id);\r\n\treturn id;\r\n}\r\n\r\nasync function addItem(data) {\r\n\t\r\n\treturn await fbdb.addToDB(\"col02\",data);\r\n}\r\n\r\nexport const fbService = {\r\n    getItems,\r\n\tdelItem,\r\n\taddItem\r\n};","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { deleteItem } from \"../store/actions/fbActions\";\n\nexport const ItemStrip = ({ item }) => {\n\tconst dispatch = useDispatch()\n\tconst handleDelete = () => {\n\t\tconsole.log(\"delete\", item.id);\n\t\tdispatch(deleteItem(item.id));\n\t}\n\n\treturn (\n\t\t<div >\n\n\t\t\t\n\n\t\t\t<div className=\"table-fb-items\">\n\t\t\t\t<p className=\"tc\">{item.name}</p>\n\t\t\t\t<p className=\"tc\">-</p>\n\t\t\t\t<p className=\"tc\">-</p>\n\t\t\t\t<p className=\"tc-small\">{item.id}</p>\n\t\t\t\t<p className=\"tc\">-</p>\n\t\t\t\t<button className=\"btn\" onClick={handleDelete}><i className=\"fas fa-trash-alt\"></i></button>\n\t\t\t\t<p></p>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import { fbService } from '../../services/fbService';\r\n\r\nexport function loadItems() {\r\n\treturn async dispatch => {\r\n\t\ttry {\r\n\t\t\tconst items = await fbService.getItems();\r\n\t\t\tdispatch({ type: 'GET_ITEMS', items });\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log('err in loadItems', err);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport function deleteItem(id) {\r\n\treturn async dispatch => {\r\n\t\ttry {\r\n\t\t\tfbService.delItem(id);\r\n\t\t\tdispatch({ type: 'REMOVE_ITEM', id });\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log('err in deleteItem', err);\r\n\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport function addItem(inData) {\r\n\treturn async dispatch => {\r\n\t\ttry {\r\n\t\t\tlet newId = await fbService.addItem(inData);\r\n\t\t\tlet data = { ...inData, id: newId }\r\n\r\n\t\t\tdispatch({ type: 'ADD_ITEM', data });\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log('err in addItem', err);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport function setUser(user) {\r\n\treturn dispatch => { dispatch({ type: 'SET_USER', action: user }) }\r\n}","import React, { useState, useEffect, useContext } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// Redux store\nimport { setPageName } from '../store/actions/userActions'\nimport { loadItems, addItem } from \"../store/actions/fbActions\";\n\n// Comps\nimport { ItemStrip } from '../cmps/ItemStrip';\n\n// Context\nimport { UserContext } from '../UserContext';\n\nexport const Fbdb = () => {\n\t// const { user, setLoggedUser } = useContext(UserContext);\n\t\n\tconst dispatch = useDispatch()\n\tconst items = useSelector((state) => state.fb.items);\n\tconst [itemInput, setItemInput] = useState('');\n\n\tuseEffect(() => {\n\t\tdispatch(loadItems());\n\t\tdispatch(setPageName('fbdb'));\n\t}, [])// eslint-disable-line react-hooks/exhaustive-deps\n\n\tconst doAddItem = () => {\n\t\tlet newObj = {\n\t\t\tname: itemInput\n\t\t}\n\t\tdispatch(addItem(newObj));\n\t\tsetItemInput('');\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Firebase test page</h1>\n\t\t\t<div className=\"table-fb-items\">\n\t\t\t\t<input className=\"tc\" type=\"text\" value={itemInput} onChange={ev => setItemInput(ev.target.value)}></input>\n\t\t\t\t<button onClick={doAddItem}>Add</button>\n\t\t\t</div>\n\n\t\t\t{items.map(item => <ItemStrip key={item.id} item={item} />)}\n\t\t</div >\n\t)\n}","import React, { useEffect ,useContext} from 'react'\nimport { useDispatch } from 'react-redux'\n\n// Redux store\nimport { setPageName } from '../store/actions/userActions'\n\nimport { fbdb } from '../services/firebase'\nimport { getAuth, signInWithPopup, GoogleAuthProvider, signOut } from \"firebase/auth\";\nimport { UserContext } from '../UserContext';\n\nexport const Login = () => {\n\tconst { user, setLoggedUser } = useContext(UserContext);\n\n\tconst dispatch = useDispatch()\n\n\tasync function doSignup() {\n\t\tconst auth = getAuth();\n\t\tsignInWithPopup(auth, fbdb.provider)\n\t\t\t.then((result) => {\n\t\t\t\t// This gives you a Google Access Token. You can use it to access the Google API.\n\t\t\t\tconst credential = GoogleAuthProvider.credentialFromResult(result);\n\t\t\t\tconst token = credential.accessToken;\n\t\t\t\tconst user = result.user;\n\t\t\t\tlet tmp = {\n\t\t\t\t\tname: user.displayName,\n\t\t\t\t\tmail: user.email,\n\t\t\t\t\tphotoURL: user.photoURL,\n\t\t\t\t\tuid: user.uid,\n\t\t\t\t\ttoken: token\n\t\t\t\t}\n\n\n\t\t\t\t// PUT THE USER IN CONTEXT\n\t\t\t\tsetLoggedUser(tmp);\n\t\t\t}).catch((error) => {\n\t\t\t\t// const errorCode = error.code;\n\t\t\t\t// const errorMessage = error.message;\n\t\t\t\t// The email of the user's account used.\n\t\t\t\t// const email = error.email;\n\t\t\t\t// The AuthCredential type that was used.\n\t\t\t\t// const credential = GoogleAuthProvider.credentialFromError(error);\n\t\t\t});\n\t}\n\n\tconst doSignOut = () => {\n\t\tconst auth = getAuth();\n\t\tsignOut(auth).then(() => {\n\t\t\t// Remove user from context\n\t\t\tsetLoggedUser(null);\n\t\t}).catch((error) => {\n\t\t\tconsole.log(error);\n\t\t});\n\t}\n\n\tuseEffect(() => {\n\t\tdispatch(setPageName('login'));\n\t}, [])// eslint-disable-line react-hooks/exhaustive-deps\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Profile / Login</h1>\n\n\t\t\t{(user ? <button onClick={doSignOut}>Signout</button> : <button onClick={doSignup}>Login with google</button>)}\n\n\t\t\t{(user ?\n\t\t\t\t<div>\n\t\t\t\t\t<p>{user.name}</p>\n\t\t\t\t\t<img src={user.photoURL} />\n\t\t\t\t</div>\n\t\t\t\t:\n\t\t\t\t<p>Not Logged In</p>\n\n\t\t\t)}\n\t\t</div>\n\t)\n}","import React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { setPageName } from '../store/actions/userActions'\nimport { DebounceInput } from 'react-debounce-input';\n\nexport const Debounce = () => {\n\tconst dispatch = useDispatch()\n\tconst [state, setState] = useState('');\n\n\t// On mount\n\tuseEffect(() => {\n\t\tdispatch(setPageName('debounce'));\n\t}, [])// eslint-disable-line react-hooks/exhaustive-deps\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Debounce</h1>\n\t\t\t<div className=\"App\" >\n\t\t\t\t<DebounceInput minLength={2} debounceTimeout={1000} onChange={event => setState(event.target.value)} />\n\t\t\t\t<p>Value: {state}</p>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { setPageName } from '../store/actions/userActions'\n\nexport const Validation = () => {\n\tconst dispatch = useDispatch()\n\n\tconst [name_err, setName_err] = useState('');\n\tconst [company_err, setComp_err] = useState('');\n\tconst [phone_err, setPhone_err] = useState('');\n\tconst [email_err, setEmail_err] = useState('');\n\tconst [check_err, setCheck_err] = useState(false);\n\tconst [check_stts, setCheck_stts] = useState(false);\n\n\tconst toggleCheck = () => {\n\t\tsetCheck_stts(!check_stts);\n\t}\n\n\n\tconst doSend = async ev => {\n\t\tev.preventDefault();\n\t\tlet valid = true;\n\n\t\tif (!(/^[a-z ,.'-]+$/i.test(ev.target.name.value))) {\n\t\t\tsetName_err('Invalid, please try again'); valid = false\n\t\t} else { setName_err('') }\n\n\t\tif (!(/^[a-z ,.'-]+$/i.test(ev.target.company.value))) {\n\t\t\tsetComp_err('Invalid, please try again'); valid = false\n\t\t} else { setComp_err('') }\n\n\t\tif (!(/^[0-9]+$/i.test(ev.target.phone.value))) {\n\t\t\tsetPhone_err('Invalid, please try again'); valid = false\n\t\t} else { setPhone_err('') }\n\n\t\tif (!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(ev.target.email.value))) {\n\t\t\tsetEmail_err('Invalid, please try again'); valid = false\n\t\t} else { setEmail_err('') }\n\n\t\tif (!check_stts) {\n\t\t\tsetCheck_err('You must agree to the terms'); valid = false\n\t\t}\n\t\telse { setCheck_err('') }\n\t};\n\n\t// On mount\n\tuseEffect(() => {\n\t\tdispatch(setPageName('validation'));\n\t}, [])// eslint-disable-line react-hooks/exhaustive-deps\n\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Form Validation</h1>\n\n\t\t\t<h4>The fields below are validated using regex (see code on gitHub)</h4>\n\n\t\t\t<form onSubmit={doSend}>\n\t\t\t\t<div className=\"input-container\">\n\t\t\t\t\t<input name=\"name\" type=\"text\" placeholder=\"Full Name\" />\n\t\t\t\t\t<div className=\"err-msg\">{name_err}</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"input-container\">\n\t\t\t\t\t<input name=\"company\" type=\"text\" placeholder=\"Company Name\" />\n\t\t\t\t\t<div className=\"err-msg\">{company_err}</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"input-container\">\n\t\t\t\t\t<input name=\"phone\" type=\"text\" placeholder=\"Phone\" />\n\t\t\t\t\t<div className=\"err-msg\">{phone_err}</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"input-container\">\n\t\t\t\t\t<input name=\"email\" type=\"text\" placeholder=\"Email\" />\n\t\t\t\t\t<div className=\"err-msg\">{email_err}</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"ra w400\">\n\t\t\t\t\t<div className=\"cb\">\n\t\t\t\t\t<input type=\"checkbox\" name=\"check\" className=\"w20\" onClick={toggleCheck} />\n\t\t\t\t\t\t<p>I agree</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"err-msg\" >{check_err}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"ra\"><button className=\"submit-btn\">Submit</button></div>\n\t\t\t</form>\n\t\t</div>\n\t)\n}","import React, { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { setPageName } from '../store/actions/userActions'\n\nexport const Lobby = () => {\n\tconst dispatch = useDispatch()\n\n\t// On mount\n\tuseEffect(() => {\n\t\tdispatch(setPageName('lobby'));\n\t}, [])// eslint-disable-line react-hooks/exhaustive-deps\n\n\n\treturn (\n\t\t<div className=\"text-page\">\n\t\t\t<h1>Code Playground</h1>\n\t\t\t<h2>Welcome to my code playground.</h2>\n\t\t\t<p>This project contains different code practices and use of frameworks and libraries</p>\n\t\t\t<p>React, Redux, NodeJS, Express, MongoDB, Firebase, axios, socket.io, SCSS, Flex, debounce, regex, promises, routing</p>\n\t\t\t<p>Hooks: useState, useContext, useEffect, useDispatch, useSelector ...</p>\n\t\t\t<p>-</p>\n\t\t\t<p>UI design is in progress</p>\n\t\t\t<p>For some nice looking CSS please see my other projects.</p>\n\t\t\t<p>-</p>\n\t\t\t<p>Hire me: 054-8762043</p>\n\n\n\n\t\t</div>\n\t)\n}","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const SideBar = () => {\r\n\tconst pageName = useSelector((state) => state.user.pageName);\r\n\r\n\treturn (\r\n\t\t<div className=\"cbl2 inner-side-bar\">\r\n\t\t\t{/* <p className=\"title\">Side Bar</p> */}\r\n\r\n\t\t\t<div className={(pageName === 'lobby' ? \"active-cell\" : \"inactive-cell\")}>\r\n\t\t\t\t<NavLink to=\"/\"> Lobby</NavLink>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={(pageName === 'books' ? \"active-cell\" : \"inactive-cell\")}>\r\n\t\t\t\t<NavLink to=\"/books\"> Books</NavLink>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={(pageName === 'authors' ? \"active-cell\" : \"inactive-cell\")}>\r\n\t\t\t\t<NavLink to=\"/authors\"> Authors</NavLink>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={(pageName === 'tasks' ? \"active-cell\" : \"inactive-cell\")}>\r\n\t\t\t\t<NavLink to=\"/tasks\"> Tasks</NavLink>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={(pageName === 'fbdb' ? \"active-cell\" : \"inactive-cell\")}>\r\n\t\t\t\t<NavLink to=\"/firebase\"> Firebase test</NavLink>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={(pageName === 'login' ? \"active-cell\" : \"inactive-cell\")}>\r\n\t\t\t\t<NavLink to=\"/login\"> Login</NavLink>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<div className={(pageName === 'debounce' ? \"active-cell\" : \"inactive-cell\")}>\r\n\t\t\t\t<NavLink to=\"/debounce\"> Debounce</NavLink>\r\n\t\t\t</div>\r\n\t\t\r\n\t\t\t<div className={(pageName === 'validation' ? \"active-cell\" : \"inactive-cell\")}>\r\n\t\t\t\t<NavLink to=\"/validation\"> Validation</NavLink>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React, { useState } from \"react\";\n// import { connect } from \"react-redux\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport { UserContext } from \"./UserContext\";\n\n// PAGES\nimport { Books } from \"./pages/Books\";\nimport { Authors } from \"./pages/Authors\";\nimport { Tasks } from \"./pages/Tasks\";\nimport { Fbdb } from \"./pages/Fbdb\";\nimport { Login } from \"./pages/Login\";\nimport { Debounce } from \"./pages/Debounce\";\nimport { Validation } from \"./pages/Validation\";\nimport { Lobby } from \"./pages/Lobby\";\n\n// COMPS\nimport { SideBar } from \"./cmps/SideBar\";\n\nfunction _App() {\n\tconst [user, setLoggedUser] = useState(null);\n\n\treturn (\n\t\t<div className=\"outter-container\">\n\t\t\t<div className=\"inner-container\">\n\t\t\t\t<div className=\"ra\">\n\t\t\t\t\t<UserContext.Provider value={{ user, setLoggedUser }}>\n\t\t\t\t\t\t<div className=\"side-bar\"><SideBar /></div>\n\t\t\t\t\t\t<div className=\"content-container\">\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route exact component={Lobby} path={\"/\"} />\n\t\t\t\t\t\t\t\t<Route exact component={Books} path={\"/books\"} />\n\t\t\t\t\t\t\t\t<Route exact component={Authors} path={\"/authors\"} />\n\t\t\t\t\t\t\t\t<Route exact component={Tasks} path={\"/tasks\"} />\n\t\t\t\t\t\t\t\t<Route exact component={Fbdb} path={\"/firebase\"} />\n\t\t\t\t\t\t\t\t<Route exact component={Login} path={\"/login\"} />\n\t\t\t\t\t\t\t\t<Route exact component={Debounce} path={\"/debounce\"} />\n\t\t\t\t\t\t\t\t<Route exact component={Validation} path={\"/validation\"} />\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</ UserContext.Provider>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport const App = withRouter(_App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createBrowserHistory} from 'history'\r\n\r\nexport default createBrowserHistory()","let localLoggedinUser = null;\r\nif (sessionStorage.user) localLoggedinUser = JSON.parse(sessionStorage.user);\r\n\r\nconst initialState = {\r\n    users: [],\r\n    loggedInUser: localLoggedinUser,\r\n    userCount: null,\r\n    pageName: null,\r\n    popup: true\r\n}\r\n\r\nexport function user(state = initialState, action = {}) {\r\n    switch (action.type) {\r\n        case 'COUNT_USERS':\r\n            return { ...state, userCount: action.number[0]['total'] };\r\n        case 'SHOW_POPUP':\r\n            return { ...state, popup: action.show };\r\n        case 'SET_USER':\r\n            return { ...state, loggedInUser: action.user, popup: true };\r\n        case 'GET_USER':\r\n            return { ...state, singleUser: action.userId };\r\n        case 'SET_USERS':\r\n            return { ...state, users: action.users };\r\n        case 'REMOVE_USER':\r\n            return { ...state, users: state.users.filter(user => user._id !== action.userId) };\r\n        \r\n\t\tcase 'PAGE_NAME':\r\n            return { ...state, pageName: action.name };\r\n        case 'UPDATE_USER':\r\n            return { ...state, users: state.users.map(user => (action._user._id === user._id) ? action._user : user) }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n    books: [],\r\n    bookCount: null,\r\n\tactiveBook : null\r\n}\r\n\r\nexport function book(state = initialState, action = {}) {\r\n    switch (action.type) {\r\n        case 'COUNT_BOOKS':\r\n            return { ...state, bookCount: action.number[0]['total'] };\r\n        \r\n        case 'SET_BOOK':\r\n            return { ...state, activeBook: action.book };\r\n\r\n        case 'GET_BOOK':\r\n            return { ...state, singleUser: action.bookId };\r\n\r\n        case 'SET_BOOKS':\r\n            return { ...state, books: action.books };\r\n\r\n        case 'REMOVE_BOOK':\r\n            return { ...state, books: state.books.filter(book => book._id !== action.bookId) };\r\n        \r\n        case 'UPDATE_BOOK':\r\n            return { ...state, book: state.books.map(book => (action._book._id === book._id) ? action._book : book) }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n    authors: [],\r\n    authorCount: null,\r\n\tactiveAuthor : null\r\n}\r\n\r\nexport function author(state = initialState, action = {}) {\r\n    switch (action.type) {\r\n        case 'COUNT_AUTHORS':\r\n            return { ...state, authorCount: action.number[0]['total'] };\r\n        \r\n        case 'SET_AUTHOR':\r\n            return { ...state, activeAuthor: action.author };\r\n\r\n        // case 'GET_AUTHOR':\r\n        //     return { ...state, singleAuthor: action.authorId };\r\n\r\n        case 'SET_AUTHORS':\r\n            return { ...state, authors: action.authors };\r\n\r\n        // case 'REMOVE_AUTHOR':\r\n        //     return { ...state, authors: state.authors.filter(author => author._id !== action.authorId) };\r\n        \r\n        case 'UPDATE_AUTHOR':\r\n            return { ...state, author: state.authors.map(author => (action._author._id === author._id) ? action._author : author) }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n\ttasks: []\r\n}\r\n\r\nexport function task(state = initialState, action = {}) {\r\n\tswitch (action.type) {\r\n\r\n\r\n\t\tcase 'GET_TASKS':\r\n\t\t\treturn { ...state, tasks: action.tasks };\r\n\r\n\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}","const initialState = {\r\n\titems: [],\r\n\tuser: null\r\n}\r\n\r\nexport function fb(state = initialState, action = {}) {\r\n\tswitch (action.type) {\r\n\r\n\r\n\t\tcase 'GET_ITEMS':\r\n\t\t\treturn { ...state, items: action.items };\r\n\r\n\t\tcase 'REMOVE_ITEM':\r\n\t\t\treturn { ...state, items: state.items.filter(item => item.id !== action.id) };\r\n\r\n\t\tcase 'ADD_ITEM':\r\n\t\t\treturn { ...state, items: [...state.items, action.data] };\r\n\r\n\t\tcase 'SET_USER':\r\n\t\t\treturn { ...state, user: action.user };\r\n\t\t\r\n\t\tcase 'REMOVE_USER':\r\n\t\t\treturn { ...state, user: null };\r\n\r\n\r\n\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}","const initialState = {\r\n  isLoading: false\r\n};\r\n\r\nexport function system(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'LOADING_START':\r\n      return { ...state, isLoading: true };\r\n    case 'LOADING_DONE':\r\n      return { ...state, isLoading: false };\r\n    default: return state;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, compose, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport { user } from './reducers/userReducer';\r\nimport { book } from './reducers/bookReducer';\r\nimport { author } from './reducers/authorReducer';\r\nimport { task } from './reducers/taskReducer';\r\nimport { fb } from './reducers/fbReducer';\r\nimport { system } from './reducers/systemReducer';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    user,\r\n    book,\r\n\tauthor,\r\n\ttask,\r\n\tfb,\r\n    system\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\nimport history from './history';\nimport { Router } from 'react-router-dom';\nimport { store } from './store/store';\nimport './assets/styles/global.scss'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Router history={history}>\n\t\t\t<Provider store={store}>\n\t\t\t\t<App />\n\t\t\t</Provider>\n\t\t</Router>\n\t</React.StrictMode >,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}